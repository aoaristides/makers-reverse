### Server
server:
  port: 8080
  error:
    whitelabel:
      enabled: true
  compression:
    enabled: true # Whether response compression is enabled.
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.

### Spring
spring:
  application:
    name: makersweb-reverse-consumer
  profiles:
    default: development
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  datasource:
    url: jdbc:mysql://${mysql.url}/${mysql.schema}?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${mysql.username}
    password: ${mysql.password}
    hikari:
      auto-commit: false
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal � manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no max 20 conexões com o banco de dados. O ideal � manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQL8Dialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/

## AWS Cloud
cloud:
  aws:
    credentials:
      instance-profile: false
    region:
      static: us-east-1
    stack:
      enabled: false
    sqs:
      endpoint: http://localhost:4566
    sns:
      endpoint: http://localhost:4566

## SQS Recebe Reversa | SNS Topic Reversa Recebida
receive:
  reverse:
    notification:
      topic:
        name: reversaRecebidaNotification
    order:
      queue:
        name: recebeReversaDoPedidoQueue

## SQS Fanout
reverse:
  by:
    billet:
      queue:
        name: reversaPorBoletoQueue
    credit-card:
      queue:
        name: reversaPorCartaoCreditoQueue
    debit-card:
      queue:
        name: reversaPorCartaoDebitoQueue
    pix:
      queue:
        name: reversaPorPixQueue